type Pool @entity {
    id: ID!
    name: String!
    structureType: String!
    stableCoin: Bytes!
    factor: Bytes!
    minDeposit: BigInt!
    totalDeposited: BigInt!
    totalBorrowed: BigInt!
    createdAt: BigInt!
    assetsLocked: [Asset!]!
}

type Balance @entity {
    id: ID!
    lender: Bytes!
    lend: BigInt!
    earned: BigInt!
}

enum TransactionType {
    BORROW
    REPAY
    LEND
    WITHDRAW
}

type Transaction @entity {
    id: ID!
    from: Bytes!
    to: Bytes!
    amount: BigInt!
    createdAt: BigInt!
    type: TransactionType!
}

type Asset @entity {
    id: ID!
    hash: String!
    value: BigInt!
    uploadedAt: BigInt!
    uri: String!
    riskRating: String!
    maturityDate: BigInt!
    factor: Bytes!
    isLocked: Boolean!
    isRedeemed: Boolean!
    loanInfo: Loan
}

type Loan @entity {
    id: ID!
    amount: BigInt!
    debt: BigInt!
    factor: Bytes!
    borrowingPool: Pool!
    collateralAsset: Asset!
    createdAt: BigInt!
    isClosed: Boolean!
    transactions: [Transaction]!
}

type VotingInfo @entity {
    id: ID!
    locked: BigInt!
}

type Lock @entity {
    id: ID!
    amount: BigInt!
    start: BigInt!
    end: BigInt!
}
